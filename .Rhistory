ProximityToVariationLab=
Corpus=c()
mapdist("waco, texas", "houston, texas")
register_google(key = "AIzaSyBWd-wTaNh63MUUgS1PnZvERM8IFRPPmF8")
devtools::install_github('dkahle/ggmap')
install.packages("devtools", dependencies = TRUE)
devtools::install_github('dkahle/ggmap')
NearestCity=c("Newcastle", "Liverpool", "Birmingham")
NearestUniversity=c("Liverpool University", "Birmingham University", "Newcastle University")
testData=data.frame(NearestCity, NearestUniversity)
ProximityToUniversity=mapdist(testData$NearestCity, testData$NearestUniversity)
library(ggmap)
register_google(key = "AIzaSyBWd-wTaNh63MUUgS1PnZvERM8IFRPPmF8")
EnglishVariety=c("Geordie", "Scouse", "Brummie")
VarietyLocation=c("Newcastle", "Liverpool", "Birmingham")
NearestUniversity=c("Liverpool University", "Birmingham University", "Newcastle University")
testData=data.frame(VarietyLocation, NearestUniversity)
ProximityToUniversity=mapdist(testData$VarietyLocation, testData$NearestUniversity)
View(testData)
rlang::last_error()
mapdist("Bishop Auckland", "Newcastle")
mapdist(testData$VarietyLocation, testData$NearestUniversity)
testData=data.frame(
VarietyLocation="Bishop Auckland"
NearestUniversity="Newcastle"
)
testData=data.frame(
VarietyLocation="Bishop Auckland"
NearestUniversity="Newcastle"
)
testData=data.frame(
VarietyLocation="Bishop Auckland"
NearestUniversity="Newcastle")
testData=data.frame(
VarietyLocation=c("Bishop Auckland")
NearestUniversity=c("Newcastle"))
testData=data.frame(VarietyLocation=c("Bishop Auckland", "Durham"),
NearestUniversity=c("Newcastle", "Newcastle"))
ProximityToUniversity=mapdist(testData$VarietyLocation, testData$NearestUniversity)
View(ProximityToUniversity)
bibentry(ggnap)
bibentry(ggmap)
install.packages("bibliometrix",dependencies=TRUE)
install.packages("bibliometrix")
install.packages("bibliometrix", dependencies=TRUE)
q()
install.packages("bibliometrix", dependencies=TRUE)
q()
install.packages("bibliometrix", dependencies=TRUE)
q()
install.packages("bibliometrix", dependencies=TRUE)
q()
install.packages("bibliometrix", dependencies=TRUE)
q()
install.packages("bibliometrix", dependencies=TRUE)
q()
q()
devtools::insyall_github("massimoaria/bibliometrix")
devtools::install_github("massimoaria/bibliometrix")
update.packages(checkBuilt=TRUE)
update.packages()
q()
library(bibliometrix)
install.packages("bibliometrix")
library(bibliometrix)
install.packages("lme4")
install.packages("igraph")
install.packages("bibliometrix")
install.packages("bibliometrix")
install.packages("lme4")
q()
update.packages()
q()
install.packages("tmvnsim")
install.packages("psych")
install.packages("mnormt")
install.packages("psych")
q()
install.packages("ggmap", dependencies=TRUE)
q()
<<<<<<< HEAD
## Load and install packages ----
## First specify the packages of interest
packages = c("ggmap")
## Load and install packages ----
## First specify the packages of interest
packages = c("ggmap","dplyr")
## Now load or install&load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
)
## Google API key ----
LiamKey <- "AIzaSyC9Deo70nrX_aaVNc3mkxSz-8ThhypBjGU"
CaitlinKey <- "AIzaSyBmpAnL6n6I5wTmH_eQx2fd9UxcW2zYkVI"
register_google(key = CaitlinKey)
## Variety Lists ----
set.seed(111)
EnglishVariety=c("Cheshire","Cumbrian","Tyneside","Hartlepool","Lancashire","Sunderland","Mancunian","Northumbrian","County Durham","Merseyside","Teesside","Yorkshire","Lincolnshire","East Lincolnshire","Black Country","Birmingham","North Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Porstmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
VarietyLocation=c("Cheshire","Cumbria","Newcastle upon Tyne","Hartlepool","Lancashire","Sunderland","Manchester","Northumbrian","County Durham","Merseyside","Teesside","Yorkshire","Lincolnshire","Lincolnshire","Black Country","Birmingham","Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Porstmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
pilotData=data.frame(EnglishVariety,VarietyLocation)
#Pilot dataset
pilotData=pilotData[sample(1:nrow(pilotData), 10), ]
print(pilotData)
pilotData$AreaIncome=c(30.4,24.5,37.9,34.9,25.9,42.9,43,35.9,27.3,27)
## Load and install packages ----
## First specify the packages of interest
packages = c("ggmap","dplyr","plyer")
## Load and install packages ----
## First specify the packages of interest
packages = c("ggmap","dplyr","plyrr")
## Load and install packages ----
## First specify the packages of interest
packages = c("ggmap","dplyr","plyr")
## Now load or install&load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
)
## Load and install packages ----
## First specify the packages of interest
packages = c("ggmap","plyr","dplyr")
## Now load or install&load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
)
VarietyLocation=c("Cheshire","Cumbria","Newcastle upon Tyne","Hartlepool","Lancashire","Sunderland","Manchester","Northumbrian","County Durham","Merseyside","Teesside","Yorkshire","Lincolnshire","Lincolnshire","Black Country","Birmingham","Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Porstmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
pilotData=data.frame(EnglishVariety,VarietyLocation)
#Pilot dataset
pilotData=pilotData[sample(1:nrow(pilotData), 10), ]
print(pilotData)
pilotData$pilotCorpus=c("No","No","Yes","No","No","No","No","Yes","No","No")
pilotData$NearestUniversity=c("University of Lincoln","Falmouth University","University of Suffolk", "University of East Anglia", "University of Birmingham", "University of Kent","University of Central Lancashire", "Newcastle University", "Northumbria University", "Staffordshire University")
pilotData$AreaIncome=c(30.4,24.5,37.9,34.9,25.9,42.9,43,35.9,27.3,27)
paperData=read.csv("pilotData.csv")
paperData=subset(paperData, Removed=="No")
FreqPapers=count(paperData, vars="Variety")
FreqPapers[nrow(FreqPapers)+1,]=c("BlackCountry",0)
pilotData$FreqPapers=FreqPapers
## Load and install packages ----
## First specify the packages of interest
packages = c("ggmap","plyr","tidyverse")
## Now load or install&load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
)
View(UniversityData)
## Load and install packages ----
## First specify the packages of interest
packages = c("ggmap","plyr","tidyverse")
## Now load or install&load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
)
## Load and install packages ----
## First specify the packages of interest
packages = c("ggmap","plyr")
## Now load or install&load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
)
## Load and install packages ----
## First specify the packages of interest
packages = c("ggmap","plyr")
## Now load or install&load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
)
## Load and install packages ----
## First specify the packages of interest
packages = c("ggmap","plyr")
## Now load or install&load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
)
register_google(key = "AIzaSyBmpAnL6n6I5wTmH_eQx2fd9UxcW2zYkVI")
## Variety Lists ----
set.seed(111)
EnglishVariety=c("Cheshire","Cumbrian","Tyneside","Hartlepool","Lancashire","Sunderland","Mancunian","Northumbrian","County Durham","Merseyside","Teesside","Yorkshire","Lincolnshire","East Lincolnshire","Black Country","Birmingham","North Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Portsmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
VarietyLocation=c("Cheshire","Cumbria","Newcastle upon Tyne","Hartlepool","Lancashire","Sunderland","Manchester","Northumbrian","County Durham","Merseyside","Teesside","Yorkshire","Lincolnshire","Lincolnshire","Black Country","Birmingham","Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Portsmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
pilotData=data.frame(EnglishVariety,VarietyLocation)
View(pilotData)
#Pilot dataset
pilotData=pilotData[sample(1:nrow(pilotData), 10), ]
View(pilotData)
pilotData$pilotCorpus=c("No","No","Yes","No","No","No","No","Yes","No","No")
pilotData$NearestUniversity=c("University of Lincoln","Falmouth University","University of Suffolk", "University of East Anglia", "University of Birmingham", "University of Kent","University of Central Lancashire", "Newcastle University", "Northumbria University", "Staffordshire University")
pilotData$AreaIncome=c(30.4,24.5,37.9,34.9,25.9,42.9,43,35.9,27.3,27)
paperData=read.csv("pilotData.csv")
paperData=subset(paperData, Removed=="No")
FreqPapers=count(paperData, vars="Variety")
FreqPapers[nrow(FreqPapers)+1,]=c("BlackCountry",0)
pilotData$FreqPapers=FreqPapers
paperData=read.csv("pilotData.csv")
View(paperData)
levels(paperData$Variety)
paperData=subset(paperData, Removed=="No") %>%
mutate(Variety=factor(Variety))
levels(paperData$Variety)
pilotData <- pilotData %>%
mutate(EnglishVariety=factor(EnglishVariety))
levels(pilotData$EnglishVarieties)
levels(pilotData$EnglishVariety)
EnglishVariety=c("Cheshire","Cumbrian","Tyneside","Hartlepool","Lancashire","Sunderland","Mancunian","Northumbrian","CountyDurham","Merseyside","Teesside","Yorkshire","Lincolnshire","East Lincolnshire","BlackCountry","Birmingham","North Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Portsmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
VarietyLocation=c("Cheshire","Cumbria","Newcastle upon Tyne","Hartlepool","Lancashire","Sunderland","Manchester","Northumbrian","County Durham","Merseyside","Teesside","Yorkshire","Lincolnshire","Lincolnshire","Black Country","Birmingham","Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Portsmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
pilotData=data.frame(EnglishVariety,VarietyLocation)
#Pilot dataset
pilotData=pilotData[sample(1:nrow(pilotData), 10), ]
print(pilotData)
pilotData$pilotCorpus=c("No","No","Yes","No","No","No","No","Yes","No","No")
pilotData$NearestUniversity=c("University of Lincoln","Falmouth University","University of Suffolk", "University of East Anglia", "University of Birmingham", "University of Kent","University of Central Lancashire", "Newcastle University", "Northumbria University", "Staffordshire University")
pilotData$AreaIncome=c(30.4,24.5,37.9,34.9,25.9,42.9,43,35.9,27.3,27)
pilotData <- pilotData %>%
mutate(EnglishVariety=factor(EnglishVariety))
paperData=read.csv("pilotData.csv")
paperData=subset(paperData, Removed=="No") %>%
mutate(Variety=factor(Variety))
levels(pilotData$EnglishVariety)
levels(paperData$Variety)
EnglishVariety=c("Cheshire","Cumbrian","Tyneside","Hartlepool","Lancashire","Sunderland","Mancunian","Northumbrian","CountyDurham","Merseyside","Teesside","Yorkshire","Lincolnshire","BlackCountry","Birmingham","North Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Portsmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
VarietyLocation=c("Cheshire","Cumbria","Newcastle upon Tyne","Hartlepool","Lancashire","Sunderland","Manchester","Northumbrian","County Durham","Merseyside","Teesside","Yorkshire","Lincolnshire","Black Country","Birmingham","Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Portsmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
pilotData=data.frame(EnglishVariety,VarietyLocation)
#Pilot dataset
pilotData=pilotData[sample(1:nrow(pilotData), 10), ]
print(pilotData)
pilotData$pilotCorpus=c("No","No","Yes","No","No","No","No","Yes","No","No")
pilotData$NearestUniversity=c("University of Lincoln","Falmouth University","University of Suffolk", "University of East Anglia", "University of Birmingham", "University of Kent","University of Central Lancashire", "Newcastle University", "Northumbria University", "Staffordshire University")
View(pilotData)
EnglishVariety=c("Cheshire","Cumbrian","Tyneside","Hartlepool","Lancashire","Sunderland","Mancunian","Northumbrian","CountyDurham","Merseyside","Teesside","Yorkshire","Lincolnshire","East Lincolnshire","BlackCountry","Birmingham","North Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Portsmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
VarietyLocation=c("Cheshire","Cumbria","Newcastle upon Tyne","Hartlepool","Lancashire","Sunderland","Manchester","Northumbrian","County Durham","Merseyside","Teesside","Yorkshire","Lincolnshire","Lincolnshire","Black Country","Birmingham","Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Portsmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
pilotData=data.frame(EnglishVariety,VarietyLocation)
#Pilot dataset
pilotData=pilotData[sample(1:nrow(pilotData), 10), ]
print(pilotData)
pilotData$pilotCorpus=c("No","No","Yes","No","No","No","No","Yes","No","No")
pilotData$NearestUniversity=c("University of Lincoln","Falmouth University","University of Suffolk", "University of East Anglia", "University of Birmingham", "University of Kent","University of Central Lancashire", "Newcastle University", "Northumbria University", "Staffordshire University")
pilotData$AreaIncome=c(30.4,24.5,37.9,34.9,25.9,42.9,43,35.9,27.3,27)
pilotData <- pilotData %>%
mutate(EnglishVariety=factor(EnglishVariety))
## Variety Lists ----
set.seed(111)
EnglishVariety=c("Cheshire","Cumbrian","Tyneside","Hartlepool","Lancashire","Sunderland","Mancunian","Northumbrian","CountyDurham","Merseyside","Teesside","Yorkshire","Lincolnshire","East Lincolnshire","BlackCountry","Birmingham","North Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Portsmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
VarietyLocation=c("Cheshire","Cumbria","Newcastle upon Tyne","Hartlepool","Lancashire","Sunderland","Manchester","Northumbrian","County Durham","Merseyside","Teesside","Yorkshire","Lincolnshire","Lincolnshire","Black Country","Birmingham","Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Portsmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
pilotData=data.frame(EnglishVariety,VarietyLocation)
#Pilot dataset
pilotData=pilotData[sample(1:nrow(pilotData), 10), ]
print(pilotData)
pilotData$pilotCorpus=c("No","No","Yes","No","No","No","No","Yes","No","No")
pilotData$NearestUniversity=c("University of Lincoln","Falmouth University","University of Suffolk", "University of East Anglia", "University of Birmingham", "University of Kent","University of Central Lancashire", "Newcastle University", "Northumbria University", "Staffordshire University")
pilotData$AreaIncome=c(30.4,24.5,37.9,34.9,25.9,42.9,43,35.9,27.3,27)
pilotData <- pilotData %>%
mutate(EnglishVariety=factor(EnglishVariety))
EnglishVariety=c("Cheshire","Cumbrian","Tyneside","Hartlepool","Lancashire","Sunderland","Mancunian","Northumbrian","CountyDurham","Merseyside","Teesside","Yorkshire","Lincolnshire","BlackCountry","Birmingham","Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Portsmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
VarietyLocation=c("Cheshire","Cumbria","Newcastle upon Tyne","Hartlepool","Lancashire","Sunderland","Manchester","Northumbrian","County Durham","Merseyside","Teesside","Yorkshire","Lincolnshire","Lincolnshire","Black Country","Birmingham","Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Portsmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
pilotData=data.frame(EnglishVariety,VarietyLocation)
#Pilot dataset
pilotData=pilotData[sample(1:nrow(pilotData), 10), ]
register_google(key = "AIzaSyBmpAnL6n6I5wTmH_eQx2fd9UxcW2zYkVI")
## Variety Lists ----
set.seed(111)
EnglishVariety=c("Cheshire","Cumbrian","Tyneside","Hartlepool","Lancashire","Sunderland","Mancunian","Northumbrian","CountyDurham","Merseyside","Teesside","Yorkshire","Lincolnshire","BlackCountry","Birmingham","Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Portsmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
VarietyLocation=c("Cheshire","Cumbria","Newcastle upon Tyne","Hartlepool","Lancashire","Sunderland","Manchester","Northumbrian","County Durham","Merseyside","Teesside","Yorkshire","Lincolnshire","Lincolnshire","Black Country","Birmingham","Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Portsmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
pilotData=data.frame(EnglishVariety,VarietyLocation)
EnglishVariety=c("Cheshire","Cumbrian","Tyneside","Hartlepool","Lancashire","Sunderland","Mancunian","Northumbrian","CountyDurham","Merseyside","Teesside","Yorkshire","Lincolnshire","BlackCountry","Birmingham","Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Portsmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
VarietyLocation=c("Cheshire","Cumbria","Newcastle upon Tyne","Hartlepool","Lancashire","Sunderland","Manchester","Northumbrian","County Durham","Merseyside","Teesside","Yorkshire","Lincolnshire","Black Country","Birmingham","Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Portsmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
pilotData=data.frame(EnglishVariety,VarietyLocation)
#Pilot dataset
pilotData=pilotData[sample(1:nrow(pilotData), 10), ]
print(pilotData)
pilotData$pilotCorpus=c("No","No","Yes","No","No","No","No","Yes","No","No")
pilotData$NearestUniversity=c("University of Lincoln","Falmouth University","University of Suffolk", "University of East Anglia", "University of Birmingham", "University of Kent","University of Central Lancashire", "Newcastle University", "Northumbria University", "Staffordshire University")
pilotData$AreaIncome=c(30.4,24.5,37.9,34.9,25.9,42.9,43,35.9,27.3,27)
pilotData <- pilotData %>%
mutate(EnglishVariety=factor(EnglishVariety))
pilotData=data.frame(EnglishVariety,VarietyLocation)
#Pilot dataset
pilotData=pilotData[sample(1:nrow(pilotData), 10), ]
print(pilotData)
## Variety Lists ----
set.seed(111)
EnglishVariety=c("Cheshire","Cumbrian","Tyneside","Hartlepool","Lancashire","Sunderland","Mancunian","Northumbrian","CountyDurham","Merseyside","Teesside","Yorkshire","Lincolnshire","BlackCountry","Birmingham","Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Portsmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
VarietyLocation=c("Cheshire","Cumbria","Newcastle upon Tyne","Hartlepool","Lancashire","Sunderland","Manchester","Northumbrian","County Durham","Merseyside","Teesside","Yorkshire","Lincolnshire","Black Country","Birmingham","Staffordshire","Coventry","Norfolk","Suffolk","London","Essex","Hampshire","Portsmouth","Kent","Sussex","Cornwall","Bristol","Plymouth","Dorset")
pilotData=data.frame(EnglishVariety,VarietyLocation)
#Pilot dataset
pilotData=pilotData[sample(1:nrow(pilotData), 10), ]
print(pilotData)
=======
install.packages("ggmap")
q()
<<<<<<< HEAD
#Pilot data
pilotData=read.csv("pilotModelData.csv")
# plot theme
theme_Caitlin_present <- function() {theme_bw(base_size = 22) %+replace%
theme(plot.background  = element_rect(fill = "transparent", colour = NA),
panel.background = element_rect(fill="gray90", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key = element_rect(fill="transparent", colour=NA),
panel.grid.major = element_line(colour = "white", size = 0.2),
panel.grid.minor = element_line(colour = "grey98", size = 0.5))}
#Pilot data
pilotData=read.csv("pilotModelData.csv")
head(pilotData, 10)
#Pilot models
pilotCorp=glm(FreqPapers.freq~pilotCorpus, data=pilotData, family=poisson)
summary(pilotCorp)
pilotIncome=glm(FreqPapers.freq~AreaIncome, data=pilotData, family=poisson)
summary(pilotIncome)
bigModel=glm(FreqPapers.freq~AreaIncome+pilotCorpus, data=pilotData, family=poisson)
summary(bigModel)
library(ggplot2)
plotData=read.csv("plotData.csv")
bigplot=ggplot(data=plotData,(aes(x=Variety, fill=Variety)))+
geom_bar()+
labs(caption="Figure 1. Frequency of papers on each English variety that could be included in the present study.")
ggsave("posterPlot.png", bigplot)
#Data-------
data=read.csv("MinorityData.rda")
#Are English varieties that are typically geographically distant from linguistics university departments understudied? --------
GeoMod1=glm(FreqPapers~ProximityToLingDept, data=data, family=poisson)
GeoMod2=glm(FreqPapers~ProximityToUniversity, data=data, family=poisson)
GeoMod3=glm(FreqPapers~ProximityToDegree, data=data, family=poisson)
GeoMod4=glm(FreqPapers~ProximityToVariationLab, data=data, family=poisson)
#Do corpus' facilitate variation research?------
CorpMod1=glm(FreqPapers~Corpus, data=data, family=poisson)
#Are English varieties associated with higher social/income status lacking in research articles?-------
StatusMod2=glm(FreqPapers~AreaIncome, data=data, family=poisson)
#Is most research conducted on varieties of English typically associated with suburban, as opposed to metropolitan or rural, areas?------
UrbanMod1=glm(FreqPapers~Metropolitan, data=data, family=poisson)
UrbanMod2=glm(FreqPapers~ProximityToCityCentre, data=data, family=poisson)
# plot theme
theme_Caitlin_present <- function() {theme_bw(base_size = 22) %+replace%
theme(plot.background  = element_rect(fill = "transparent", colour = NA),
panel.background = element_rect(fill="gray90", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key = element_rect(fill="transparent", colour=NA),
panel.grid.major = element_line(colour = "white", size = 0.2),
panel.grid.minor = element_line(colour = "grey98", size = 0.5))}
#Pilot data
pilotData=read.csv("pilotModelData.csv")
head(pilotData, 10)
#Pilot models
pilotCorp=glm(FreqPapers.freq~pilotCorpus, data=pilotData, family=poisson)
summary(pilotCorp)
theme_Caitlin_present <- function() {theme_bw(base_size = 22) %+replace%
theme(plot.background  = element_rect(fill = "transparent", colour = NA),
panel.background = element_rect(fill="gray90", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key = element_rect(fill="transparent", colour=NA),
panel.grid.major = element_line(colour = "white", size = 0.2),
panel.grid.minor = element_line(colour = "grey98", size = 0.5))}
plotData=read.csv("plotData.csv")
bigplot=ggplot(data=plotData,(aes(x=Variety, fill=Variety)))+
geom_bar()+
labs(caption="Figure 1. Frequency of papers on each English variety that could be included in the present study.")
bigplot
theme_Caitlin_present <- function() {theme_bw(base_size = 22) %+replace%
theme(plot.background  = element_rect(fill = "transparent", colour = NA),
panel.background = element_rect(fill="gray90", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key = element_rect(fill="transparent", colour=NA),
panel.grid.major = element_line(colour = "white", size = 0.2),
panel.grid.minor = element_line(colour = "grey98", size = 0.5))}
plotData=read.csv("plotData.csv")
bigplot=ggplot(data=plotData,(aes(x=Variety, fill=Variety)))+
geom_bar()+
labs(caption="Figure 1. Frequency of papers on each English variety that could be included in the present study.")+
theme_Caitlin_present()+
NULL
bigplot
bigplot=ggplot(data=plotData,(aes(x=Variety, fill=Variety)))+
geom_bar()+
labs(caption="Figure 1.Frequency of papers from pilot serach that could be included in the present study.") +
theme_Caitlin_present()+
NULL
bigplot
install.packages("wesanderson")
library(wesanderson)
bigplot=ggplot(data=plotData,(aes(x=Variety, fill=Variety)))+
geom_bar()+
labs(caption="Figure 1.Frequency of papers from pilot serach that could be included in the present study.") +
scale_fill_manual(values = wes_palette(5, name = "GrandBudapest1", type = "discrete"), name = "") +
theme_Caitlin_present()+
NULL
devtools::install_github("ciannabp/inauguration", ref="main")
library(inauguration)
inauguration("inauguration_2021")
inauguration5=inauguration("inauguration_2021", 5)
inauguration5
bigplot=ggplot(data=plotData,(aes(x=Variety, fill=Variety)))+
geom_bar()+
labs(caption="Figure 1.Frequency of papers from pilot serach that could be included in the present study.") +
scale_fill_manual(palette = "inaugaration5")+
theme_Caitlin_present()+
NULL
bigplot
bigplot=ggplot(data=plotData,(aes(x=Variety, fill=Variety)))+
geom_bar()+
labs(caption="Figure 1.Frequency of papers from pilot serach that could be included in the present study.") +
scale_fill_manual(values = inaugaration5)+
theme_Caitlin_present()+
NULL
bigplot
inauguration5=inauguration("inauguration_2021", 5)
bigplot=ggplot(data=plotData,(aes(x=Variety, fill=Variety)))+
geom_bar()+
labs(caption="Figure 1.Frequency of papers from pilot serach that could be included in the present study.") +
scale_fill_manual(values = inaugaration5)+
theme_Caitlin_present()+
NULL
bigplot=ggplot(data=plotData,(aes(x=Variety, fill=Variety)))+
geom_bar()+
labs(caption="Figure 1.Frequency of papers from pilot serach that could be included in the present study.") +
scale_fill_manual(values = inauguration("inauguration_2021", 5))+
theme_Caitlin_present()+
NULL
bigplot
ggsave("posterPlot.png", bigplot)
bigplot=ggplot(data=plotData,(aes(x=Variety, fill=Variety)))+
geom_bar()+
labs(caption="Figure 1.Frequency of papers from pilot serach that could be included in the present study.") +
scale_fill_manual(values = inauguration("inauguration_2021", 5))+
theme_Caitlin_present()+
theme(legend.position = "none")+
NULL
bigplot
bigplot=ggplot(data=plotData,(aes(x=Variety, fill=Variety)))+
geom_bar()+
labs(caption="Figure 1.Frequency of papers from pilot serach that could be included in the present study.") +
scale_fill_manual(values = inauguration("inauguration_2021", 5))+
theme_Caitlin_present()+
theme(legend.position = "none", plot.caption = element_text(hjust = 0))+
NULL
bigplot
bigplot=ggplot(data=plotData,(aes(x=Variety, fill=Variety)))+
geom_bar()+
labs(caption="Figure 1.Frequency of papers by region (from pilot search), after pre-screening.") +
scale_fill_manual(values = inauguration("inauguration_2021", 5))+
theme_Caitlin_present()+
theme(legend.position = "none", plot.caption = element_text(hjust = 0))+
NULL
bigplot
bigplot=ggplot(data=plotData,(aes(x=Variety, fill=Variety)))+
geom_bar()+
labs(caption="Figure 1.Frequency of papers by region (from pilot search), after pre-screening.") +
scale_fill_manual(values = inauguration("inauguration_2021", 5))+
theme_Caitlin_present()+
theme(legend.position = "none", plot.caption = element_text(hjust = 0.5))+
NULL
bigplot
bigplot=ggplot(data=plotData,(aes(x=Variety, fill=Variety)))+
geom_bar()+
labs(caption="Figure 1.Frequency of papers by region (from pilot search), after pre-screening.") +
scale_fill_manual(values = inauguration("inauguration_2021_bernie", 5))+
theme_Caitlin_present()+
theme(legend.position = "none", plot.caption = element_text(hjust = 0.5))+
NULL
bigplot
bigplot=ggplot(data=plotData,(aes(x=Variety, fill=Variety)))+
geom_bar()+
labs(caption="Figure 1.Frequency of papers by region (from pilot search), after pre-screening.") +
scale_fill_manual(values = inauguration("bernie_mittens", 5))+
theme_Caitlin_present()+
theme(legend.position = "none", plot.caption = element_text(hjust = 0.5))+
NULL
bigplot
bigplot=ggplot(data=plotData,(aes(x=Variety, fill=Variety)))+
geom_bar()+
labs(caption="Figure 1.Frequency of papers by region (from pilot search), after pre-screening.") +
scale_fill_manual(values = inauguration("inauguration_2021", 5))+
theme_Caitlin_present()+
theme(legend.position = "none", plot.caption = element_text(hjust = 0.5))+
NULL
bigplot
ggsave("posterPlot.png", bigplot)
=======
library(devtools)
install.packages("devtools")
devtools::install_github("ciannabp/inauguration")
q()
